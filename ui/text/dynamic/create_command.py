from aiogram.utils.markdown import hunderline, hitalic, hcode, hbold

from ui.text.mixins import arg_format
from ui.text.static import SAVE_QUESTION
from utils.manager import User
from utils.misc import ru_mobile_number_mask


def select_material(user: User) -> str:
    return f"{create_bronoskin_args_info(user)}\nüíé –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª —Ä–µ–∑–∞"


def select_cut_variation(user: User) -> str:
    return f"{create_bronoskin_args_info(user)}\nüè∑ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–µ–∑–∞"


def brand_create_confirm(user: User) -> str:
    return f"‚Ä¢ –ë—Ä–µ–Ω–¥: {hunderline(user['brand_name'])}\n\n" \
           f"{SAVE_QUESTION}"


def device_create(user: User) -> str:
    return f"‚Ä¢ –ë—Ä–µ–Ω–¥: {hunderline(user['brand'].name)}\n\nüí¨ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞...\n\n‚ùó " \
           + hbold("‚ö†Ô∏è –ü—Ä–æ—Å—å–±–∞ –æ—Ç–Ω–µ—Å—Ç–∏—Å—å –∫ –≤–≤–æ–¥—É –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –ï—Å–ª–∏ –≤–≤–µ—Å—Ç–∏ –∏–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å"
                   " –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–æ–π –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é, –≤–æ-–ø–µ—Ä–≤—ã—Ö, —è –±—É–¥—É –≤–∞—Å –Ω–µ–Ω–∞–≤–∏–¥–µ—Ç—å, –≤–æ-–≤—Ç–æ—Ä—ã—Ö,"
                   " –ø–æ–∏—Å–∫ —ç—Ç–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –±—É–¥–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω –≤–∞—à–µ–π –æ—à–∏–±–∫–æ–π. –°–ø–∞—Å–∏–±–æ!")


def device_create_confirm(user: User) -> str:
    return f"‚Ä¢ –ë—Ä–µ–Ω–¥: {hunderline(user['brand'].name)}\n" \
           f"‚Ä¢ –ò–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {hunderline(user['device_name'])}\n" \
           f"‚Ä¢ –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {hunderline(user['device_type'].name)}\n\n" \
           f"{SAVE_QUESTION}"


def select_device_type(user: User) -> str:
    return f"‚Ä¢ –ë—Ä–µ–Ω–¥: {hunderline(user['brand'].name)}\n" \
           f"‚Ä¢ –ò–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {hunderline(user['device_name'])}\n\n" \
           f"üí¨ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞...\n\n"


def select_implementation(user: User) -> str:
    return f"{create_bronoskin_args_info(user)}\nüè∑ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø–ª–µ–Ω–∫–∏. " \
           + hbold("–û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –æ–ø–ª–∞—Ç–∞ –∏–ª–∏ —Å–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∑–∞ —Ç—Ä–µ–±—É—é—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.\n\n") \
           + hitalic("‚ÑπÔ∏è –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")


def bronoskin_create_confirm(user: User) -> str:
    return hbold("–†–µ–∑ –ø–ª–µ–Ω–∫–∏ —Å –æ–ø–ª–∞—Ç–æ–π") + f"\n{create_bronoskin_args_info(user)}\n" \
                                           f"{SAVE_QUESTION}"


def delayed_payment_create_confirm(user: User) -> str:
    return hbold("–û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑–∞") \
           + f"\n{create_bronoskin_args_info(user)}\n" \
             f"{SAVE_QUESTION}"


def write_off_confirm(user: User) -> str:
    return hbold("–°–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∑–∞ –ø–ª–µ–Ω–∫–∏") \
           + f"\n{create_bronoskin_args_info(user)}\n" \
             f"{SAVE_QUESTION}"


def select_payment_type(user: User) -> str:
    return f"{create_bronoskin_args_info(user)}\nüí∞ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–ª–∞—Ç—ã\n\n" \
           + hitalic("‚ÑπÔ∏è –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø–ª–µ–Ω–∫–∏, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑"
                     " –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –∏–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ") + hcode("XX%")


def type_client_number(user: User) -> str:
    return f"{create_bronoskin_args_info(user)}" \
           f"\n‚òéÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –º–æ–±–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"


def select_is_material_ruined(user: User) -> str:
    return f"{create_bronoskin_args_info(user)}\nüóëÔ∏è –ú–∞—Ç–µ—Ä–∏–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏–ª–∏ –∏—Å–ø–æ—Ä—á–µ–Ω?"


def create_bronoskin_args_info(user: User) -> str:
    text = ""
    device = user["device"]
    if device:
        text += arg_format("–î–µ–≤–∞–π—Å", user["device"].model_title())
    cut_var = user["cut_variation"]
    if cut_var:
        text += arg_format("–¢–∏–ø —Ä–µ–∑–∞", cut_var.name)
    material_variation = user["material_variation"]
    if material_variation:
        text += arg_format("–ú–∞—Ç–µ—Ä–∏–∞–ª –ø–ª–µ–Ω–∫–∏", material_variation.name)
    number = user["number"]
    if number:
        text += arg_format("–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞", ru_mobile_number_mask(number))
    money = user["money"]
    if money:
        text += arg_format("–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ", f"{money} ‚ÇΩ")
    payment_type = user["payment_type"]
    if payment_type:
        text += arg_format("–¢–∏–ø –æ–ø–ª–∞—Ç—ã", payment_type.name)
    comment = user["comment"]
    if comment:
        text += arg_format("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", comment)
    is_material_ruined = user["is_material_ruined"]
    if is_material_ruined:
        text += arg_format("–ú–∞—Ç–µ—Ä–∏–∞–ª –∏—Å–ø–æ—Ä—á–µ–Ω", "–î–ê" if is_material_ruined else "–ù–ï–¢")
    return text
